name: CI

on:
  pull_request:

jobs:
  setup:
    name: 'Setup and dependencies'
    runs-on: ubuntu-latest
    outputs:
      nx-base: ${{ steps.set-shas.outputs.base }}
      nx-head: ${{ steps.set-shas.outputs.head }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: set-shas
        uses: nrwl/nx-set-shas@v4

      - name: Select pnpm as package manager
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 10.12.1

      - name: Use Node.js 22
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22.12
          cache: 'pnpm'

      - name: Cache pnpm store
        uses: actions/cache@v4.2.3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: pnpm-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Generate testing environment file
        run: pnpm run config

      - name: Rebuild and prepare
        run: pnpm rebuild && pnpm run prepare --if-present

      - name: Cache node_modules and build artifacts
        uses: actions/cache@v4.2.3
        with:
          path: |
            node_modules
            dist
            .nx/cache
          key: deps-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('nx.json', 'package.json') }}

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Select pnpm as package manager
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 10.12.1

      - name: Use Node.js 22
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22.12
          cache: 'pnpm'

      - name: Restore dependencies and build artifacts
        uses: actions/cache@v4.2.3
        with:
          path: |
            node_modules
            dist
            .nx/cache
          key: deps-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('nx.json', 'package.json') }}

      - name: Run Tests (Affected)
        run: npx nx affected:test --base=${{ needs.setup.outputs.nx-base }} --head=${{ needs.setup.outputs.nx-head }}

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Select pnpm as package manager
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 10.12.1

      - name: Use Node.js 22
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22.12
          cache: 'pnpm'

      - name: Restore dependencies and build artifacts
        uses: actions/cache@v4.2.3
        with:
          path: |
            node_modules
            dist
            .nx/cache
          key: deps-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('nx.json', 'package.json') }}

      - name: Run Linter (Affected)
        run: npx nx affected:lint --base=${{ needs.setup.outputs.nx-base }} --head=${{ needs.setup.outputs.nx-head }}

  stylelint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Select pnpm as package manager
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 10.12.1

      - name: Use Node.js 22
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22.12
          cache: 'pnpm'

      - name: Cache pnpm store
        uses: actions/cache@v4.2.3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: pnpm-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Run stylelint
        run: npx nx stylelint cuentoneta

  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Select pnpm as package manager
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 10.12.1

      - name: Use Node.js 22
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22.12
          cache: 'pnpm'

      - name: Cache pnpm store
        uses: actions/cache@v4.2.3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: pnpm-${{ runner.os }}-

      - name: Cache Playwright browsers
        uses: actions/cache@v4.2.3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: playwright-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Generate testing environment file
        run: pnpm run config

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E Tests
        run: npx nx run cuentoneta:e2e-ci

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: dist/.playwright/playwright-report/
          retention-days: 7
